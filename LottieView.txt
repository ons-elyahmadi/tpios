import SwiftUI
import Lottie

// Créer une vue qui utilise UIViewRepresentable pour intégrer Lottie dans SwiftUI
struct LottieView: UIViewRepresentable {
    var animationURL: String
    var loopMode: LottieLoopMode = .loop
    
    let animationView = LottieAnimationView()

    func makeUIView(context: Context) -> UIView {
        let view = UIView(frame: .zero)

        // Charger l'animation à partir de l'URL
        if let url = URL(string: animationURL) {
            LottieAnimation.loadedFrom(url: url, closure: { animation in
                guard let animation = animation else {
                    print("Échec du chargement de l'animation")
                    return
                }

                // Configurer l'animation
                animationView.animation = animation
                animationView.contentMode = .scaleAspectFit
                animationView.loopMode = loopMode
                animationView.play()

                // Ajouter Lottie AnimationView à la vue SwiftUI
                view.addSubview(animationView)

                // Contraintes pour ajuster l'animationView à la taille de la vue
                animationView.translatesAutoresizingMaskIntoConstraints = false
                NSLayoutConstraint.activate([
                    animationView.widthAnchor.constraint(equalTo: view.widthAnchor),
                    animationView.heightAnchor.constraint(equalTo: view.heightAnchor)
                ])
            }, animationCache: LRUAnimationCache.sharedCache)
        }

        return view
    }

    func updateUIView(_ uiView: UIView, context: Context) {
        // Mettre à jour la vue si nécessaire
    }
}
